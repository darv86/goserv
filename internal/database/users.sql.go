// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO "users" (created_at, updated_at, name)
VALUES (coalesce($2, now()), coalesce($3, now()), $1)
RETURNING id, created_at, updated_at, name
`

type CreateUserParams struct {
	Name    string
	Column2 interface{}
	Column3 interface{}
}

// every SqlC statement starts with comment,
// the name of a func, which will be generated by go from this file
// and one record wll be returned
// INSERT INTO "users" (name)
// CreateUser will accept as a parameters these 4 arguments
// VALUES ($1, $2, $3, $4)
func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Name, arg.Column2, arg.Column3)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
	)
	return i, err
}
